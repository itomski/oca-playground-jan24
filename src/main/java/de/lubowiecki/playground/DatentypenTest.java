package de.lubowiecki.playground;

public class DatentypenTest {

    public static void main(String[] args) {

        // byte < short < int < long < float < double
        //         char < int

        // Primitive Datentypen

        byte b = 120;
        short s = 120;
        int i = 120; // Standard für Ganzzahlen
        long l = 120l;
        float f = 120.5f;
        double d = 120.5; // Standard für Zahlen mit Dezimalpunkt

        boolean b2 = true;
        char c = 'A';
        // char c = "A"; // String

        int i2 = i; // Eine Kopie des Wertes von i wird auf i2 abgelegt
        i2 += 10; // i2 = i2 + 10
        System.out.println(i); // bleibt unverändert
        System.out.println(i2);

        // Primitive Widening
        long l2 = b; // Der Wert von byte wird automatisch auf long erweitert

        // Primitive Narrowing - automatisch nicht erlaubt
        // b = i; // Der Wert von int kann nicht automatisch auf byte gekürzt werden
        b = (byte)i; // mit Cast erlaubt. Führt aber ggfl. zu einem Überlauf oder Unterlauf
        System.out.println(b);

        i = 1000;
        b = (byte)i; // Überlauf
        System.out.println(b);

        // beide Operanden werden auf den gleichen Typ, den höheren von beiden gebracht
        // Erg ist vom Typ des höheren
        int sum = b + i;

        // Datentypen kleiner als int werden zum Rechnen mind. auf int angehoben
        sum = b + s;

        double sum2 = b + s + d;

        char c2 = '0';
        System.out.println((int)c2);
    }
}
